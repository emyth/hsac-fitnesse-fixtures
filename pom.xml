<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>nl.hsac</groupId>
	<artifactId>hsac-fitnesse-fixtures</artifactId>
	<version>2.0.0-SNAPSHOT</version>
	<url>https://github.com/fhoeben/hsac-fitnesse-fixtures</url>
	<name>HSAC's FitNesse Fixtures</name>
	<description>Fixtures to assist in testing via FitNesse</description>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Fried Hoeben</name>
			<email>fitnesse@hsac.nl</email>
			<organization>Hoeben Software Architecture Consulting B.V.</organization>
			<organizationUrl>https://nl.linkedin.com/in/friedhoeben</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/fhoeben/hsac-fitnesse-fixtures.git</connection>
		<url>https://github.com/fhoeben/hsac-fitnesse-fixtures.git</url>
		<developerConnection>scm:git:git://github.com/fhoeben/hsac-fitnesse-fixtures.git</developerConnection>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- classpath that Fitnesse uses when not starting from IDE/maven -->
		<standalone.classpath>wiki/fixtures</standalone.classpath>
		<fitnesse.port>9090</fitnesse.port>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.fitnesse</groupId>
			<artifactId>fitnesse</artifactId>
			<version>20150424</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.5</version>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.20</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.46.0</version>
			<exclusions>
			<exclusion>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-htmlunit-driver</artifactId>
			</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.codeborne</groupId>
			<artifactId>phantomjsdriver</artifactId>
			<version>1.2.1</version>
			<exclusions>
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.seleniumhq.selenium</groupId>
					<artifactId>selenium-remote-driver</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.sksamuel.diff</groupId>
			<artifactId>diff</artifactId>
			<version>1.1.11</version>
		</dependency>
		<!-- com.jayway.jsonpath uses slf4j for logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.7.10</version>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>1.2.0</version>
		</dependency>
		<!-- Testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<outputDirectory>${standalone.classpath}</outputDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<filesets>
						<fileset>
							<!-- On clean throw away old screen shots stored by BrowserTest -->
							<directory>wiki/FitNesseRoot/files/screenshots/</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.18.1</version>
				<configuration>
					<excludes>
						<!-- this test actually runs fitnesse tests
							 therefore it will only be executed for
							 integration-test goal
						-->
						<exclude>**/FixtureDebugTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.18.1</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- this test actually runs fitnesse tests-->
					<test>FixtureDebugTest</test>
					<systemPropertyVariables>
						<fitnesseSuiteToRun>${fitnesseSuiteToRun}</fitnesseSuiteToRun>
						<seleniumDefaultTimeout>${seleniumDefaultTimeout}</seleniumDefaultTimeout>
						<seleniumGridUrl>${seleniumGridUrl}</seleniumGridUrl>
						<seleniumBrowser>${seleniumBrowser}</seleniumBrowser>
						<seleniumDriverClass>${seleniumDriverClass}</seleniumDriverClass>
						<seleniumCapabilities>${seleniumCapabilities}</seleniumCapabilities>
					</systemPropertyVariables>
					<properties>
						<property>
							<name>listener</name>
							<value>nl.hsac.fitnesse.junit.JUnitXMLPerPageListener,nl.hsac.fitnesse.junit.ProgressLoggerListener</value>
						</property>
					</properties>
					<!-- Our listener will create XML failsafe should not, or all tests are reported twice -->
					<disableXmlReport>true</disableXmlReport>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>java</executable>
					<workingDirectory>wiki</workingDirectory>
					<arguments>
						<argument>-jar</argument>
						<argument>fitnesse-standalone.jar</argument>
						<argument>-p</argument>
						<argument>${fitnesse.port}</argument>
					</arguments>
				</configuration>
			</plugin>
			<plugin>
				<!-- Use dependency:copy-dependencies to copy all jar from dependencies to ${standalone.classpath},
					 where classes from this project end up also, so that all fixtures and
					 dependencies are available to Fitnesse without need to have Maven to run tests.
				-->
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<includes>**/*</includes>
					<excludes>META-INF,META-INF/**</excludes>
					<includeScope>runtime</includeScope>
					<excludeArtifactIds>fitnesse,junit,org.eclipse.jgit</excludeArtifactIds>
					<outputDirectory>${standalone.classpath}</outputDirectory>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<descriptors>
						<descriptor>src/assembly/standalone.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<!-- references the profile defined just below -->
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy</goals>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- all plugins below are usually only required for release builds -->
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.10.2</version>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<name>Maven Central Snapshot Repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<name>Maven Central Staging Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
	</distributionManagement>

</project>
